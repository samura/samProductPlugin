<?php

/**
 * PluginProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class PluginProduct extends BaseProduct
{
	public function getUrl() {
		return url_for('aProductItem_show', array('slug' => $this->slug, 'cat' => $this->ProductCategory->slug));
	}
	
	public function link_to() {
		return link_to($this, 'aProductItem_show', array('slug' => $this->slug, 'cat' => $this->ProductCategory->slug));
	}

	public function getPageSlug() {
		$perfix = sfConfig::get('app_samProduct_prefixProduct');
		return $perfix . $this->slug;
	}

	public function getText($limit = null) {
		$page = aPageTable::retrieveBySlugWithSlots($this->getPageSlug());
		$text = '';

		foreach ($page->Areas as $area)
		{
			$slot = $page->getArea($area['name']);
			foreach($slot as $item)
			{
				if(method_exists($item, 'getText'))
				{
					$text .=  $item->getText();
				}
			}
		}
		
		$text = str_replace("\n", "<br />", $text);

		if(!is_null($limit))
		{
			$text = aString::limitWords($text, $limit, array('append_ellipsis' => true));
		}

		return $text;
	}
	
	public function getTextForArea($area, $limit = null) {
		$page = aPageTable::retrieveBySlug($this->getPageSlug());
		$text = '';
	
		foreach($page->getArea($area) as $item)
		{
			if(method_exists($item, 'getText'))
			{
				$text .= $item->getText();
			}
		}
		
		//$text = str_replace("\n", "<br />", $text);
		
		if(!is_null($limit))
		{
			$text = aString::limitWords($text, $limit, array('append_ellipsis' => true));
		}
	
		return $text;
	}
	
	public function getRichText($limit = null) {
		$page = aPageTable::retrieveBySlugWithSlots($this->getPageSlug());
		$text = '';
	
		foreach ($page->Areas as $area)
		{
			$text .= $page->getAreaBasicHtml($area['name']);
		}
	
		if(!is_null($limit))
		{
			$text = aHtml::limitWords($text, $limit, array('append_ellipsis' => true));
		}
	
		return $text;
	}
	
	public function getRichTextForArea($area, $limit = null) {
		$page = aPageTable::retrieveBySlug($this->getPageSlug());
		
		$text = $page->getAreaBasicHtml($area);
	
		if(!is_null($limit))
		{
			$text = aHtml::limitWords($text, $limit, array('append_ellipsis' => true));
		}
	
		return $text;
	}
	
	
	
	public function getMedia($type = 'image', $limit = 1) {
		$page = aPageTable::retrieveBySlugWithSlots($this->getPageSlug());
		$aMediaItems = array();
			
		foreach ($page->Areas as $area)
		{
			foreach($page->getArea($area['name']) as $item)
			{
				foreach($item->getOrderedMediaItems() as $aMediaItem)
				{
					if(is_null($type) || $aMediaItem['type'] == $type)
					{
						$limit = $limit - 1;
						$aMediaItems[] = $aMediaItem;
						if($limit == 0) return $aMediaItems;
					}
				}
			}
		}
		return $aMediaItems;
	}

	public function getMediaForArea($area, $type = 'image', $limit = 1) {
		$page = aPageTable::retrieveBySlug($this->getPageSlug());
		$aMediaItems = array();

		foreach($page->getArea($area) as $item)
		{
			foreach($item->getOrderedMediaItems() as $aMediaItem)
			{
				if(is_null($type) || $aMediaItem['type'] == $type)
				{
					$limit = $limit - 1;
					$aMediaItems[] = $aMediaItem;
					if($limit == 0) return $aMediaItems;
				}
			}
		}
		
		return $aMediaItems;
	}
	
}